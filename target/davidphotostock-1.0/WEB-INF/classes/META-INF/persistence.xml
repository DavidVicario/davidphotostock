<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="davidphotostock-pu" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>             
        <!--Declaramos todas las clases que se utilizaran-->
        <class>com.project.davidphotostock.domain.Category</class>
        <class>com.project.davidphotostock.domain.Ccaa</class>
        <class>com.project.davidphotostock.domain.Municipality</class>
        <class>com.project.davidphotostock.domain.Product</class>
        <class>com.project.davidphotostock.domain.Province</class>
        <class>com.project.davidphotostock.domain.Shipment</class>
        <class>com.project.davidphotostock.domain.ShipmentProduct</class>
        <class>com.project.davidphotostock.domain.ShipmentProductPK</class>
        <class>com.project.davidphotostock.domain.Subcategory</class>
        <class>com.project.davidphotostock.domain.Users</class>        
        <properties>
            <!--Definimos la url de la base de datos a la que se conectara-->
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/davidphotostock"/>
            <!--Ponemos el usuario y contraseÃ±a de la base de datos-->
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="88dAi12"/>
            <!--Especificamos el controlador JDBC-->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <!--Definimos el dialecto que vamos a usar-->           
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
            <!--Configuramos hibernate para que actualice automaticamente el esquema de la base de datos
            pero no eliminara ni creara tablas existentes-->           
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <!--Lo establecemos en true para que muestre las consultas SQL por consola-->
            <property name = "hibernate.show_sql" value="true"/>
        </properties>
    </persistence-unit>
</persistence>